Create a client and a server which perform the following:

Client sends a request string 'get public key'

Server generates a random public-private key pair using RSA-1024  algorithm 
and sends only the public key back to the client.

Client uses the pulic key to encrypt a given message passed as a command line argument and sends 
it to the server.

Server then decrypts the encrypted message using its 
private key and prints it.

Use python's Crypto library (use classes RSA and Random: look into manuals) 

Example:

Client side:

python3 client.py '127.0.0.1' '5000' 'hello world'

Connected to 127.0.0.1
Requesting public key
Received public key: b"0\x81\x9f0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\x00\x03\x81\x8d\x000\x81\x89\x02\x81\x81\x00\xdac\xd6\xdfJ<mS\x08\xa2\xdb\x12\xb3\xa8\xdb<A\x08\x85\x1b\x0eMP\x98\x8b'\xe4\xbc\x07m\xda\x1e\xc4\x0b\xce\\\\-\x1d\x12{\xf3\xee\xa0F\xd6\xa8b.\x13\xeb\xe0x\xa8\x0bc\x01\xeb\x0f\xd6\x1e\x01\xfc\xb2\x85\xb7E\x07_F\x00\xab\xbc\xc2\xbd=F\xbdf\xc3\x91\xf8}\x1e\x87\x93g\x13u\x8a\xc6\xc5Cf\xadfrk\x0592T=\xab\xce0F\x1b^\xa3QF!-\xbd\x82\x91\x90E Hr+\x95\xa3\x92;i\x02\x03\x01\x00\x01"
Sending Encrypted Data:b"k[\xb9\xf0BH\xaaMZ\xcfQ%(\x14\xddg\xa7\x06e\xadF\xbd\xb2\xb4P\x1b\xae\xf6uq\xa9\xa3\x81B'NOII6\xb1_^\x14\x1c\x9c4\xb1\x1c`\x99;\x7f\xc9-\xdf\x86vxp\x9dP\r\xdc\xfe\xbc\x19\xa7(\x9a\x05Xk1\xd4\xbb\xf83;E\xc2V\xb1S8z\x84\xf1!t\xda\x1e{\x94Y\xd3\x07\xc1\xd2D\xea^\xa4\xcaJ\xbe\x14\x93\xda\xc9\xd7c\xbd\xd6!\xcc\x90\x88\x19`9\x8crb\x16\x1d$\xf0"


Server side:

python3 server.py '127.0.0.1' '5000'

Connected to 127.0.0.1
Received get public key from 127.0.0.1
Sending public key:b"0\x81\x9f0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\x00\x03\x81\x8d\x000\x81\x89\x02\x81\x81\x00\xdac\xd6\xdfJ<mS\x08\xa2\xdb\x12\xb3\xa8\xdb<A\x08\x85\x1b\x0eMP\x98\x8b'\xe4\xbc\x07m\xda\x1e\xc4\x0b\xce\\\\-\x1d\x12{\xf3\xee\xa0F\xd6\xa8b.\x13\xeb\xe0x\xa8\x0bc\x01\xeb\x0f\xd6\x1e\x01\xfc\xb2\x85\xb7E\x07_F\x00\xab\xbc\xc2\xbd=F\xbdf\xc3\x91\xf8}\x1e\x87\x93g\x13u\x8a\xc6\xc5Cf\xadfrk\x0592T=\xab\xce0F\x1b^\xa3QF!-\xbd\x82\x91\x90E Hr+\x95\xa3\x92;i\x02\x03\x01\x00\x01"
Received Encrypted Data:b"k[\xb9\xf0BH\xaaMZ\xcfQ%(\x14\xddg\xa7\x06e\xadF\xbd\xb2\xb4P\x1b\xae\xf6uq\xa9\xa3\x81B'NOII6\xb1_^\x14\x1c\x9c4\xb1\x1c`\x99;\x7f\xc9-\xdf\x86vxp\x9dP\r\xdc\xfe\xbc\x19\xa7(\x9a\x05Xk1\xd4\xbb\xf83;E\xc2V\xb1S8z\x84\xf1!t\xda\x1e{\x94Y\xd3\x07\xc1\xd2D\xea^\xa4\xcaJ\xbe\x14\x93\xda\xc9\xd7c\xbd\xd6!\xcc\x90\x88\x19`9\x8crb\x16\x1d$\xf0"
Decrypted Data:b'hello world'



